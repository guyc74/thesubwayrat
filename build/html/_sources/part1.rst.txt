Drawing Manny - Part 1
======================

The first thing we'll do is draw Manny the rat.
A program that draws Manny is very small. 
Only nine lines!
Here it is:

.. code-block:: python

  import pygame
  pygame.init()
  window = pygame.display.set_mode((700, 500))

  manny_image = pygame.image.load('manny.png')
  manny_rect = manny_image.get_rect()
  manny_rect.topleft = (250, 250)
  window.blit(manny_image, manny_rect)

  pygame.display.update()
  input()

Even though the program is small we need to learn a lot in order to understand it.
We will do this in two parts: opening the game window and drawing Manny on the game window.

Opening the game window
-----------------------
The following program opens the game window.
Lets run it:
Open a new file in your editor and call it `open_window.py`.
Copy and paste the piece of code below to the new file.
Now run the piece of code.
You should see a black window.
When you press a key in the terminal the window closes.

.. code-block:: python

  import pygame
  pygame.init()
  window = pygame.display.set_mode((700, 500))

  pygame.display.update()
  input()

Lets go over each line and undertand what it does.

Packages
--------

One of the nice thing in Python is that we don't have to write everything ourselves.
Many people around the world write additions to python that we can use.
These additions are called **packages**.
The first line of the program is:

.. code-block:: python

  import pygame

It allows us to use the pygame package.
This package allows us to create a game window and draw on it.


Objects
-------

In many programming languages we have **objects**.
An object has **properties** and **methods**.
Methods are actions that the object can perform.

Imagine a car as an object.
Its properties can be its color and its brand.
Its actions can be start driving and stop driving.

The second line of the program is:

.. code-block:: python

  pygame.init()

This line initializes the pygame object from the pygame package.
We will use the pygame object to interact with our game: draw and get keyboard input.
However, before we use the pygame object we must initialize it.
We tell the pygame object to perform its init action.

A programer says this as follows "we call the pygame init method()".

Creating the screen
-------------------

The third line creates the game window.

.. code-block:: python

  window = pygame.display.set_mode((500, 700))

The line above is interesting!
To understand it we will need to learn several things: **variables**, **lists** and **functions**.

variables
^^^^^^^^^

Variables hold values.
The values can be numbers, objects or other stuff.
The line below defines a variable called 'x' that has a value of 5.
In each exampel below, try running the code yourself and playing with it.
Watch the video below for a live example.

.. code-block:: python

  x == 5
  print(x)

We can give change the value of 'x'.
Below we **assign** the value 5 to the variable 'x' 
and the we **assign** the value 7 to the variable 'x'.

.. code-block:: python

  x == 5
  print(x)
  x == 7
  print(x)

We can also assign one variable to another.
In the example below we assign 5 to 'x' and then we assign 'x' to 'y'.
Now 'y' has the value 5.

.. code-block:: python

  x == 5
  y == x
  print(y)

lists
^^^^^

A variable can also be a list.
A list is a sequence of several values.
To define a list we take three values and place paranthesis around them.
Here is a list of three numbers:

.. code-block:: python

  x == (3, 4, 12)
  print(x)

functions
^^^^^^^^^

Functions do stuff.
They receive parameters and return a result.
If you didn't figure this out, the methods of objects are functions.

Lets image a function that adds to values. we will use it like this:

sum = my_sum_function(5, 3)

Creating the screen - continued
-------------------------------

Let's go back to our third instruction:

.. code-block:: python

  window = pygame.display.set_mode((500, 700))

First of all we see that the pygame objet has a property called display.
The display property is also an object.
This is the same as a car (that is an object) that has a steering wheel (that is also an object).

The display property has a method called set_mode().
The method is a function that receives the size of the window to create and returns an object of the game's window.
The set_mode method receives the window size as a list with two items.
The first is the width of the window and the second is the height of the window.


